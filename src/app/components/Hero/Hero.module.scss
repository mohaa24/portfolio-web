@import url('https://fonts.googleapis.com/css?family=Montserrat');
@import url('https://fonts.googleapis.com/css2?family=DM+Sans:ital,opsz,wght@0,9..40,100..1000;1,9..40,100..1000&family=Host+Grotesk:ital,wght@0,300..800;1,300..800&family=VT323&display=swap');

.heroMainContainer {


    @media screen and (max-width: 768px) {
        text-align: center;
    }

    .sub {
        font-size: 18px;
        // color: #999;
        // font-family: 'VT323', sans-serif;
    }

    .scroll {
        transform: rotate(270deg);
        font-size: 30px;
        color: white;
        position: relative;
        bottom: -20vh;
    }

    h1 {
        // font-size: 50px;

        @media screen and (max-width: 768px) {
            // font-size: 30px;
        }
    }
}

// Here's the meat and potatoes.

/* Our mixin positions a copy of our text
directly on our existing text, while
also setting content to the appropriate
text set in the data-text attribute. */
@mixin glitchCopy {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}


.headLine {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 60px;
    // width: 50vw;
}

h1.glitch {
    padding: 0;
    margin: 0;
    font-family: 'Montserrat', sans-serif;
}

// Animation ----------------------------------------------------------------
.glitch {
    position: relative;
    // color: white;
    // font-size: 4em;
    letter-spacing: .5em;
    animation: glitch-skew 1s infinite linear alternate-reverse;


    &::before {
        @include glitchCopy;
        left: 2px;
        text-shadow: -2px 0 #ff00c1;
        clip: rect(44px, 450px, 56px, 0);
        animation: glitch-anim 5s infinite linear alternate-reverse;
    }

    &::after {
        @include glitchCopy;
        left: -2px;
        text-shadow: -2px 0 #00fff9, 2px 2px #ff00c1;
        animation: glitch-anim2 1s infinite linear alternate-reverse;
    }
}

@keyframes glitch-anim {
    $steps: 20;

    @for $i from 0 through $steps {
        #{percentage($i*(1/$steps))} {
            clip: rect(random(100)+px, 9999px, random(100)+px, 0);
            transform: skew((random(100) / 100) + deg);
        }
    }
}

@keyframes glitch-anim2 {
    $steps: 20;

    @for $i from 0 through $steps {
        #{percentage($i*(1/$steps))} {
            clip: rect(random(100)+px, 9999px, random(100)+px, 0);
            transform: skew((random(100) / 100) + deg);
        }
    }
}

@keyframes glitch-skew {
    $steps: 10;

    @for $i from 0 through $steps {
        #{percentage($i*(1/$steps))} {
            transform: skew((random(10) - 5) + deg);
        }
    }
}